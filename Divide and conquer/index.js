// Funci√≥n principal: divide y conquista para encontrar el m√°ximo
function findMax(arr) {
    if (arr.length === 1) {
        console.log(`[Base] Solo un n√∫mero: ${arr[0]}`);
        return arr[0];
    }

    const mid = Math.floor(arr.length / 2);
    const left = arr.slice(0, mid);
    const right = arr.slice(mid);

    console.log(`[Dividir] Izquierda: [${left}] | Derecha: [${right}]`);

    const leftMax = findMax(left);
    const rightMax = findMax(right);

    const max = Math.max(leftMax, rightMax);
    console.log(`[Comparar] M√°ximo entre ${leftMax} y ${rightMax} es ${max}`);

    return max;
}

// Funci√≥n conectada al bot√≥n HTML
function buscarMaximo() {
    const input = document.getElementById("inputNumeros").value;
    const resultadoElemento = document.getElementById("resultado");

    if (input.trim() === "") {
        resultadoElemento.textContent = "Por favor, ingresa algunos n√∫meros.";
        console.log("[ERROR] Entrada vac√≠a.");
        return;
    }

    // Convierte la cadena en arreglo de n√∫meros
    const arreglo = input.split(",").map(num => parseFloat(num.trim()));

    // Valida que todos sean n√∫meros
    if (arreglo.some(isNaN)) {
        resultadoElemento.textContent = "Solo se permiten n√∫meros v√°lidos separados por comas.";
        console.log("[ERROR] Entrada no num√©rica detectada.");
        return;
    }

    // Busca el n√∫mero m√°ximo con el divide and conquer
    console.log("üßê Iniciando b√∫squeda del n√∫mero m√°ximo en:", arreglo);
    const maximo = findMax(arreglo);
    resultadoElemento.textContent = `‚úÖ El n√∫mero m√°ximo es: ${maximo}`;
    console.log("‚úÖ Resultado final:", maximo);
}
